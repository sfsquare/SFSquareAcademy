@using SFSAcademy.Models
@{    Layout = null;}
@{
    ViewBag.Title = "Fee_Defaulters_pdf";
}
@{
    IEnumerable<SFSAcademy.Models.StundentFee> student = (IEnumerable<SFSAcademy.Models.StundentFee>)ViewData["student"];
    FINANCE_FEE_COLLECTION date = (FINANCE_FEE_COLLECTION)ViewData["date"];
    IList<SFSAcademy.Models.SelectCourseBatch> batch = (IList<SFSAcademy.Models.SelectCourseBatch>)ViewData["batch"];
    IEnumerable<SFSAcademy.Models.FeeParticular> fee_particulars = (IEnumerable<SFSAcademy.Models.FeeParticular>)ViewData["fee_particulars"];
    IEnumerable<SFSAcademy.Models.FeeTransaction> paid_fees = (IEnumerable<SFSAcademy.Models.FeeTransaction>)ViewData["paid_fees"];
    IEnumerable<FEE_DISCOUNT> batch_discounts = (IEnumerable<FEE_DISCOUNT>)ViewData["batch_discounts"];
    IEnumerable<FEE_DISCOUNT> student_discounts = (IEnumerable<FEE_DISCOUNT>)ViewData["student_discounts"];
    IEnumerable<FEE_DISCOUNT> category_discounts = (IEnumerable<FEE_DISCOUNT>)ViewData["category_discounts"];
    IEnumerable<FEE_FINE> batch_fine = (IEnumerable<FEE_FINE>)ViewData["batch_fine"];
    IEnumerable<FEE_FINE> student_fine = (IEnumerable<FEE_FINE>)ViewData["student_fine"];
    IEnumerable<FEE_FINE> category_fine = (IEnumerable<FEE_FINE>)ViewData["category_fine"];
    IEnumerable<SFSAcademy.Models.StudentsGuardians> guardians = (IEnumerable<SFSAcademy.Models.StudentsGuardians>)ViewData["guardians"];
}
<link rel="stylesheet" id="stylesheet" type="text/css" href="~/Content/stylesheets/finance/fee_defaulters_pdf.css">
<style type="text/css">
    @@media print {

        html, body {
            height: 100vh;
        }
    }
</style>
<div id="page-yield">
    <div class="hor_line"></div>
    <h2>Fees Defaulters</h2>
    <div class="hor_line"></div>
    <div class="extender"> </div>
    <div class="report">
        <div id="main_info">
            <h4> Class: @batch.FirstOrDefault().CourseData.CODE - @batch.FirstOrDefault().BatchData.NAME</h4>
            <h5> Collection: @date.NAME</h5>
        </div>
        <div id="pdf-info">
            <table id="pdf-table" style="width:100%;" cellspacing="0">
                <tr class="table-header"><td class="col-pdf">Sl. No.</td><td class="col-pdf">Admission Number</td><td class="col-pdf">Name</td><td class="col-pdf">Parent</td><td class="col-pdf">Phone</td><td class="col-pdf">Amount</td></tr>
                @{int i = 1; int index = 1; }
                @foreach (var item in student)
                {
                    string selectedRow = "even";
                    if (i % 2 == 0)
                    {
                        selectedRow = "odd";
                    }
                    var fee_particulars_inner = fee_particulars.Where(x => (x.FeeParticularData.STDNT_ID == item.StudentData.ID || x.FeeParticularData.STDNT_ID ==null) && (x.FeeParticularData.STDNT_CAT_ID == item.StudentData.STDNT_CAT_ID || x.FeeParticularData.STDNT_CAT_ID == null));
                    decimal total_fees = 0;
                    foreach (var item2 in fee_particulars_inner)
                    {
                        total_fees += (decimal)item2.FeeParticularData.AMT;
                    }

                    decimal total_discount_val = 0;
                    var batch_discounts_inner = batch_discounts.Where(x => (x.FIN_FEE_CAT_ID == item.FeeCollectionData.FEE_CAT_ID) && (x.RCVR_ID == item.StudentData.BTCH_ID) && (x.FEE_CLCT_ID == item.FeeCollectionData.ID || x.FEE_CLCT_ID == null));
                    if (batch_discounts_inner != null && batch_discounts_inner.Count() != 0)
                    {
                        foreach (var item2 in batch_discounts_inner)
                        {
                            total_discount_val += item2.IS_AMT == true ? (decimal)item2.DISC : total_fees * (decimal)item2.DISC / 100;
                        }
                    }
                    var student_discounts_inner = student_discounts.Where(x => x.FIN_FEE_CAT_ID == item.FeeCollectionData.FEE_CAT_ID && x.RCVR_ID == item.StudentData.ID && (x.FEE_CLCT_ID == item.FeeCollectionData.ID || x.FEE_CLCT_ID == null));
                    if (student_discounts_inner != null && student_discounts_inner.Count() != 0)
                    {
                        foreach (var item3 in student_discounts_inner)
                        {
                            total_discount_val += item3.IS_AMT == true ? (decimal)item3.DISC : total_fees * (decimal)item3.DISC / 100;
                        }
                    }
                    var category_discounts_inner = category_discounts.Where(x => x.FIN_FEE_CAT_ID == item.FeeCollectionData.FEE_CAT_ID && x.RCVR_ID == item.StudentData.STDNT_CAT_ID && (x.FEE_CLCT_ID == item.FeeCollectionData.ID || x.FEE_CLCT_ID == null));
                    if (category_discounts_inner != null && category_discounts_inner.Count() != 0)
                    {
                        foreach (var item4 in category_discounts_inner)
                        {
                            total_discount_val += item4.IS_AMT == true ? (decimal)item4.DISC : total_fees * (decimal)item4.DISC / 100;
                        }
                    }
                    if (total_discount_val > total_fees && total_fees >= 0)
                    {
                        total_discount_val = total_fees;
                    }

                    decimal total_fine_val = 0;
                    var batch_fine_inner = batch_fine.Where(x => x.FIN_FEE_CAT_ID == item.FeeCollectionData.FEE_CAT_ID && x.RCVR_ID == item.StudentData.BTCH_ID && (x.FEE_CLCT_ID == item.FeeCollectionData.ID || x.FEE_CLCT_ID == null));
                    if (batch_fine_inner != null && batch_fine_inner.Count() != 0)
                    {
                        foreach (var item5 in batch_fine_inner)
                        {
                            total_fine_val += item5.IS_AMT == true ? (decimal)item5.FINE : total_fees * (decimal)item5.FINE / 100;
                        }

                    }
                    var student_fine_inner = student_fine.Where(x => x.FIN_FEE_CAT_ID == item.FeeCollectionData.FEE_CAT_ID && x.RCVR_ID == item.StudentData.ID && (x.FEE_CLCT_ID == item.FeeCollectionData.ID || x.FEE_CLCT_ID == null));
                    if (student_fine_inner != null && student_fine_inner.Count() != 0)
                    {
                        foreach (var item6 in student_fine_inner)
                        {
                            total_fine_val += item6.IS_AMT == true ? (decimal)item6.FINE : total_fees * (decimal)item6.FINE / 100;
                        }
                    }
                    var category_fine_inner = category_fine.Where(x => x.FIN_FEE_CAT_ID == item.FeeCollectionData.FEE_CAT_ID && x.RCVR_ID == item.StudentData.STDNT_CAT_ID && (x.FEE_CLCT_ID == item.FeeCollectionData.ID || x.FEE_CLCT_ID == null));
                    if (category_fine_inner != null && category_fine_inner.Count() != 0)
                    {
                        foreach (var item6 in category_fine_inner)
                        {
                            total_fine_val += item6.IS_AMT == true ? (decimal)item6.FINE : total_fees * (decimal)item6.FINE / 100;
                        }
                    }

                    if (total_discount_val != 0)
                    {
                        total_fees -= total_discount_val;
                    }
                    if (total_fine_val != 0)
                    {
                        total_fees += total_fine_val;
                    }

                    var paid_fees_inner = paid_fees.Where(x => x.StudentData.ID == item.StudentData.ID);
                    if (paid_fees_inner != null)
                    {
                        decimal paid = 0;
                        foreach (var item13 in paid_fees_inner)
                        {
                            paid += (decimal)item13.FinanceTransactionData.AMT;
                        }
                        total_fees -= paid;
                    }

                    var SelGuardian = guardians.Where(x => x.StudentData.ID == item.StudentData.ID);
                    string Phone_Number = "";
                    string GuardianName = "";

                <tr class="@selectedRow">
                    <td class="col-pdf">@index</td>
                    <td class="col-pdf">@item.StudentData.ADMSN_NO</td>
                    <td class="col-pdf">@item.StudentData.FIRST_NAME @item.StudentData.MID_NAME @item.StudentData.LAST_NAME</td>
                    @foreach (var item2 in SelGuardian)
                    {
                        Phone_Number = item2.GuardianData.MOBL_PH != null ? string.Concat(Phone_Number, item2.GuardianData.MOBL_PH.ToString(), ",") : Phone_Number;
                        GuardianName = string.Concat(GuardianName, item2.GuardianData.FIRST_NAME, " ", item2.GuardianData.LAST_NAME, ",");
                    }
                    @if (SelGuardian != null)
                    {
                        <td class="col-3">@GuardianName</td>
                        <td class="col-3"> @Phone_Number </td>
                    }
                    else
                    {
                        <td class="col-3"></td>
                        <td class="col-3"></td>
                    }
                    <td class="col-pdf">@total_fees</td>
                </tr>
                    i = i + 1;
                    index += 1;
                }
                <tr class="even" cellpadding="1" cellspacing="1">
                    <td class="col-8" colspan="3"></td>
                    <td class="col-pdf"><input type="submit" id="submit_button" value="Print" class="submit_button" onclick="window.print()" /></td>
                </tr>
            </table>
        </div>
    </div>
</div>


