@model SFSAcademy.COURSE

@{
    ViewBag.Title = "Course_New";
}


<div id="content-header">
    <img src="~/Content/images/examination/show_exam.png" alt="Settings Logo">
    <h1>Courses</h1>
    <h3>New</h3>
    <div id="app-back-button">
        <a href='javascript:history.back()' onclick="return confirm('are you sure?')"><img src="~/Content/images/buttons/back.png"></a>
    </div>
</div>
<div><img src="~/Content/images/_global/header_underline_.jpg" style="width:100%"></div>

<div id="page-yield">
    <div class="bread_crumb">
        <a href="@Url.Action("Index", "Configuration")">Configuration</a> &raquo;
        <a href="@Url.Action("Index", "Courses")">Courses</a> &raquo;
        <a href="@Url.Action("Manage_Course", "Courses")">Manage Course</a> &raquo;
        New
    </div>

    @if (ViewBag.Notice != null)
    {
        <p class="flash-msg"> @ViewBag.Notice </p>
    }

    <div id="box">
        <div class="bread_crumb">
            <a href="@Url.Action("Manage_Course", "Courses")">Course</a> &raquo;
            New
        </div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            if (ViewBag.ErrorMessage != null)
            {
                <p class="flash-msg"> @ViewBag.ErrorMessage </p>
            }
            <div class="label-field-pair label">
                <div class="label-container label">@Html.LabelFor(model => model.CRS_NAME, "Course Name", htmlAttributes: new { @class = "control-label col-md-2" })</div>
                <div class="input-container">
                    @Html.EditorFor(model => model.CRS_NAME, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    <span class="necessary-field" style="font-size:small">*</span>
                    @Html.ValidationMessageFor(model => model.CRS_NAME, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>
            <div class="label-field-pair label">
                <div class="label-container label">@Html.LabelFor(model => model.SECTN_NAME, "Section Name", htmlAttributes: new { @class = "control-label col-md-2" })</div>
                <div class="input-container">
                    @Html.EditorFor(model => model.SECTN_NAME, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SECTN_NAME, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>
            <div class="label-field-pair label">
                <div class="label-container label">@Html.LabelFor(model => model.CODE, "Course Code", htmlAttributes: new { @class = "control-label col-md-2" })</div>
                <div class="input-container">
                    @Html.EditorFor(model => model.CODE, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    <span class="necessary-field" style="font-size:small">*</span>
                    @Html.ValidationMessageFor(model => model.CODE, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>
            <div id="grading">
                <div class="label-field-pair label">
                    <div class="label-container label">@Html.LabelFor(model => model.GRADING_TYPE, "Grading system type", htmlAttributes: new { @class = "control-label col-md-2" })</div>
                    <div class="text-input-bg">
                        @Html.DropDownList("GRADING_TYPE", EnumHelper.GetSelectList(typeof(GradingTypes)), "Select Grading Type", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.GRADING_TYPE, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                    </div>
                </div>
            </div>
            <h4>Initial Batch Details</h4>
            <div class="label-field-pair label">
                <div class="label-container label">@Html.LabelFor(model => model.INIT_BATCH_NAME, "Name", htmlAttributes: new { @class = "control-label col-md-2" })</div>
                <div class="input-container">
                    @Html.EditorFor(model => model.INIT_BATCH_NAME, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    <span class="necessary-field" style="font-size:small">*</span>
                    @Html.ValidationMessageFor(model => model.INIT_BATCH_NAME, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>

            <div class="label-field-pair label">
                <div class="label-container label">@Html.Label("ReturnDate", "Start Date", htmlAttributes: new { @class = "control-label col-md-2" })</div>
                <div class="input-container">
                    @Html.Editor("ReturnDate", new { htmlAttributes = new { @class = "datepicker", @Value = ViewBag.ReturnDate, @readonly = "readonly" } })
                </div>
            </div>
            <div class="label-field-pair label">
                <div class="label-container label">@Html.Label("ReturnDate2", "End Date", htmlAttributes: new { @class = "control-label col-md-2" })</div>
                <div class="input-container">
                    @Html.Editor("ReturnDate2", new { htmlAttributes = new { @class = "datepicker", @Value = ViewBag.ReturnDate2, @readonly = "readonly" } })
                </div>
            </div>
            <div id="submit_area">
                <input type="submit" value="► Save" class="submit_button" />
            </div>
            <div class="extender"></div>
        }

    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryunobtrusive") @*For unobtrusive-ajax*@
    @Scripts.Render("~/bundles/jqueryval") @*For validate and validate-unobtrusive*@
    <script src="~/Scripts/dropzone.js"></script>
    <script type="text/javascript" language="javascript">
        function toggle_grading() {
            if ($('course_cce_enabled').checked) {
                $("grading").hide();
                $('course_grading_type').value = "Normal"
            }
            else {
                $("grading").show();
            }
            return true;
        };

        $(document).ready(function () {
            $("#preview").fadeOut(15);
            $("#refreshButton").click(function () {
                var imageToLoad = $("#imageId").val();
                if (imageToLoad.length > 0) {
                    $("#preview").attr("src", "/Document/Show/" + imageToLoad);
                    $("#preview").fadeIn();
                }
            });
        });
    </script>


    <script>
        $(function () {
            $(".datepicker").datepicker({
                showOn: "button",
                buttonImage: "/Content/images/calendar_date_select/calendar.gif",
                dateFormat: 'dd/mm/yy',
                buttonImageOnly: true
            });
        });

    </script>
}
