@model IList<SelectUserPrivilage>

@{
    USER User = (USER)ViewData["User"];
    IEnumerable<SFSAcademy.Privilege_Tags> privilege_tag = (IEnumerable<SFSAcademy.Privilege_Tags>)ViewData["privilege_tag"];
}

@{
    ViewBag.Title = "Edit_Privilege";
}

<script type="text/javascript" src="@Url.Content("~/Content/javascripts/jquery/jquery.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Content/javascripts/jquery/jquery-ui.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Content/javascripts/jquery/jquery-1.9.1.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Content/javascripts/jquery/jquery-ui.js")"></script>

<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
<link rel="stylesheet" href="~/Content/stylesheets/_styles/jquery.ui.all.css" />
<link rel="stylesheet" href="~/Content/stylesheets/_styles/jquery-ui.css" />
<script type="text/javascript">
    function hasClass(elem, className) {
        return new RegExp(' ' + className + ' ').test(' ' + elem.className + ' ');
    }

    function addClass(elem, className) {
        if (!hasClass(elem, className)) {
            elem.className += ' ' + className;
        }
    }

    function removeClass(elem, className) {
        var newClass = ' ' + elem.className.replace(/[\t\r\n]/g, ' ') + ' ';
        if (hasClass(elem, className)) {
            while (newClass.indexOf(' ' + className + ' ') >= 0) {
                newClass = newClass.replace(' ' + className + ' ', ' ');
            }
            elem.className = newClass.replace(/^\s+|\s+$/g, '');
        }
    }


    function privilege_tag_check_all_or_none(privilege_tag_id, th_is) {
        var field_value = false;
        th_is.checked ? field_value = true : field_value = false;
        $('.privilege_check_' + privilege_tag_id).each(function () {
            var elementId = this.id;
            this.checked = field_value;
            var $row = $("#" + elementId).closest("tr");
            if (this.checked) {
                $row.addClass('active');
            }
            else {
                $row.removeClass('active');
            }
        })
    }

    function privilege_check(privilege_tag_id, th_is) {
        var elementId = th_is.id;
        var $row = $("#" + elementId).closest("tr");
        if (!th_is.checked) {
            var x = document.getElementsByClassName('check_all_' + privilege_tag_id)[0];
            x.checked = false;
            $row.removeClass('active');
        }
        else {
            $row.addClass('active');
            var flag = false;
            $('.privilege_check_' + privilege_tag_id).each(function () {
                if (!this.checked) {
                    flag = true;
                }
            });
            if (!flag) {
                var x = document.getElementsByClassName('check_all_' + privilege_tag_id)[0];
                x.checked = true;
            }

        }
    }

</script>

<div id="content-header">
    <img src="~/Content/images/user_profile/user_profile_logo.jpg" alt="Profile Logo">
    <h1>User Privilege</h1>
    <h3>Edit User Privilege</h3>
    <div id="app-back-button">
        <a href='javascript:history.back()' onclick="return confirm('are you sure?')"><img src="~/Content/images/buttons/back.png"></a>
    </div>
</div>
<div><img src="~/Content/images/_global/header_underline_.jpg" width="100%"></div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div id="page-yield">
        <div class="privileges">
            <div class="privilege_heading" id="application-list">
                <div class="label_field_pair"><label>Set privileges for @User.FIRST_NAME @User.LAST_NAME</label></div>
                <div class="user_submit_button1">
                    <input name="commit" type="submit" value="►Save" class="user_submit_button" />
                </div>
            </div>
            <div class="all_privileges_list">
                <table style="width:100%;" align="center" cellspacing="1" cellpadding="1" class="table_design">
                    <tr>
                        @for (var j = 0; j < privilege_tag.Count(); j++)
                        {
                            var all_privileges = Model.Where(x => x.PrivilageList.PRIVILEGE_TAG == privilege_tag.ElementAt(j).Privilege_Tag.DESCRIPTION).ToList();
                            if (all_privileges.Count() > 0)
                            {
                                int Privilege_Tag_ID = privilege_tag.ElementAt(j).Privilege_Tag.ID;
                                string TagIdString = string.Concat("privilege_check_", Privilege_Tag_ID);
                                string TagOnChangeString = string.Concat("privilege_tag_check_all_or_none('", Privilege_Tag_ID, "',this)");
                                string TagClassString = string.Concat("check_all_", Privilege_Tag_ID);

                                <td>
                                    <table id="listing" align="center" style="width: 300px;" class="privilege_table" cellpadding="1" cellspacing="1">
                                        <tr class="tr-head">
                                            <td>@Html.CheckBox("[" + j + "].Selected", privilege_tag.ElementAt(j).Selected, new { @class = @TagClassString, onchange = @TagOnChangeString, data_value = @TagIdString })</td>
                                            <td>@Html.Label("[" + j + "].Privilege_Tag.DESCRIPTION", privilege_tag.ElementAt(j).Privilege_Tag.DESCRIPTION, htmlAttributes: new { @class = "control-label col-md-2" })</td>
                                            @if (Html.Permitted_To("Privilege_Access", "User") || Html.CurrentUser_UserType().Equals("Admin"))
                                            {
                                                <td>  </td>
                                            }
                                        </tr>

                                        <tr class="tr-blank"></tr>
                                        @{int k = 1; }
                                        @foreach (var item in all_privileges)
                                        {
                                            string PrClassString = string.Concat("privilege_check_", Privilege_Tag_ID);
                                            string PrOnChangeString = string.Concat("privilege_check('", Privilege_Tag_ID, "',this);");
                                            string PrIdString = string.Concat("privilege_check_", item.PrivilageList.ID);
                                            string selectedRow = "tr-even";
                                            int Index = Model.IndexOf(item);
                                            if (k % 2 == 0)
                                            {
                                                selectedRow = "tr-odd";
                                            }
                                            if (item.PrivilageList.IS_ACT == false)
                                            {
                                                <tr class="@selectedRow">
                                                    <td class="col-8">@Html.CheckBox("[" + Index + "].Selected", item.Selected, new { @class = @PrClassString, onchange = @PrOnChangeString, @id = @PrIdString })</td>
                                                    <td class="col-9">@Html.Label("[" + Index + "].PrivilageList.NAME", item.PrivilageList.NAME, new { @class = "control-label col-md-2", @title = string.Concat("This feature is not build yet. ",item.PrivilageList.DESCRIPTION)  })</td>
                                                    @if (Html.Permitted_To("Privilege_Access", "User") || Html.CurrentUser_UserType().Equals("Admin"))
                                                    {
                                                        <td class="col-9">@Html.ActionLink("Edit", "Privilege_Access", new { Privilege_id = item.PrivilageList.ID, User_Id = item.USRS_ID })</td>
                                                    }
                                                    @Html.Hidden("[" + Index + "].PrivilageList.NAME", item.PrivilageList.NAME)
                                                    @Html.Hidden("[" + Index + "].PrivilageList.ID", item.PrivilageList.ID)
                                                    @Html.Hidden("[" + Index + "].IsActive", item.IsActive)
                                                    @Html.Hidden("[" + Index + "].USRS_ID", item.USRS_ID)
                                                </tr>
                                            }
                                            else
                                            {
                                                <tr class="@selectedRow">
                                                    <td class="col-8">@Html.CheckBox("[" + Index + "].Selected", item.Selected, new { @class = @PrClassString, onchange = @PrOnChangeString, @id = @PrIdString })</td>
                                                    <td class="col-9">@Html.Label("[" + Index + "].PrivilageList.NAME", item.PrivilageList.NAME, new { @class = "control-label col-md-2", @title = item.PrivilageList.DESCRIPTION })</td>
                                                    @if (Html.Permitted_To("Privilege_Access", "User") || Html.CurrentUser_UserType().Equals("Admin"))
                                                    {
                                                        <td class="col-9">@Html.ActionLink("Edit", "Privilege_Access", new { Privilege_id = item.PrivilageList.ID, User_Id = item.USRS_ID })</td>
                                                    }

                                                    @Html.Hidden("[" + Index + "].PrivilageList.NAME", item.PrivilageList.NAME)
                                                    @Html.Hidden("[" + Index + "].PrivilageList.ID", item.PrivilageList.ID)
                                                    @Html.Hidden("[" + Index + "].IsActive", item.IsActive)
                                                    @Html.Hidden("[" + Index + "].USRS_ID", item.USRS_ID)
                                                </tr>
                                            }
                                            k = k + 1;
                                        }

                                    </table>
                                </td>
                            }
                        }
                    </tr>
                </table>
            </div>
        </div>
    </div>
}
<input type="hidden" value=@ViewBag.Calling_Method id="Calling_Method" name="Calling_Method" />
