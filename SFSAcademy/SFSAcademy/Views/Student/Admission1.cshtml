@model SFSAcademy.STUDENT

@{
    ViewBag.Title = "Admission1";
}
<script type="text/javascript" src="@Url.Content("~/Content/javascripts/jquery/jquery.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Content/javascripts/jquery/jquery-ui.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Content/javascripts/jquery/jquery-1.9.1.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Content/javascripts/jquery/jquery-ui.js")"></script>
<link rel="stylesheet" href="~/Content/stylesheets/_styles/jquery-ui.css" />
<script>
    $(function () {
        $("#datepicker").datepicker({
            showOn: "button",
            buttonImage: "/Content/images/calendar_date_select/calendar.gif",
            dateFormat: 'dd-mm-yy',
            buttonImageOnly: true
        });
        $("#datepicker2").datepicker({
            showOn: "button",
            buttonImage: "/Content/images/calendar_date_select/calendar.gif",
            dateFormat: 'dd-mm-yy',
            buttonImageOnly: true
        });
    });

</script>

<div id="content-header">
    <img src="~/Content/images/admission/admission_page_logo.jpg" alt="Student Details Logo">
    <h1>Admission</h1>
    <h3>Student Detail - Step1</h3>
    <div id="app-back-button">
        <a href='javascript:history.back()' onclick="return confirm('are you sure?')"><img src="~/Content/images/buttons/back.png"></a>
    </div>
</div>
<div>
    <img src="~/Content/images/_global/header_underline_.jpg" style="width:100%">
</div>
<div id="flash_box">
    @if (ViewBag.ErrorMessage != null)
    {
        <p class="flash-msg"> @ViewBag.ErrorMessage </p>
    }
</div>

<div id="page-yield">
    @if (!Html.Configuration_Value("AdmissionNumberAutoIncrement").Equals('0'))
    {
        <p class="flash-msg"> Admission No Of Last Student = @Html.Configuration_Value("AdmissionNumberAutoIncrement") </p>
    }


    @using (Html.BeginForm("Admission1", "Student", FormMethod.Post, new { @encType = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div id="admission1_form">
            <div id="necessary-field-notification">
                Mark
                <span class="necessary-field">*</span> Denotes Necessary Field
            </div>
            <div id="autofill-area">
                <div class="student_admission_date">
                    @Html.LabelFor(model => model.ADMSN_NO, "Admission Number", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="text-input-bg-admission">
                        @Html.EditorFor(model => model.ADMSN_NO, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.NewAdmissionNumber, @readonly = "readonly" } })
                        <span class="necessary-field">*</span>
                        @Html.ValidationMessageFor(model => model.ADMSN_NO, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="student_admission_date">
                    @Html.LabelFor(model => model.ADMSN_DATE, "Admission Date", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="text-input-bg-admission">
                        @Html.EditorFor(model => model.ADMSN_DATE, new { htmlAttributes = new { @class = "m-wrap  datepicker", @id = "datepicker", @Value = ViewBag.ReturnDate } })
                        @Html.ValidationMessageFor(model => model.ADMSN_DATE, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <span class="span-sub-heading">Personal Details</span>
            <hr class="sub-heading">

            <div class="label-field-pair label">
                @Html.LabelFor(model => model.FIRST_NAME, "First Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <span class="necessary-field" style="font-size:small">* Required Field</span>
                <div class="text-input-bg">
                    @Html.EditorFor(model => model.FIRST_NAME, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.FIRST_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr class="label-underline label">

            <div class="label-field-pair label">
                @Html.LabelFor(model => model.MID_NAME, "Middle Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="text-input-bg">
                    @Html.EditorFor(model => model.MID_NAME, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MID_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr class="label-underline label">

            <div class="label-field-pair label">
                @Html.LabelFor(model => model.LAST_NAME, "Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <span class="necessary-field" style="font-size:small">* Required Field</span>
                <div class="text-input-bg">
                    @Html.EditorFor(model => model.LAST_NAME, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.LAST_NAME, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr class="label-underline label">

            <div id="admission1_form_vertical_block_left">
                <div class="label-field-pair label">
                    @Html.LabelFor(model => model.BTCH_ID, "Course And Batch", htmlAttributes: new { @class = "control-label col-md-2" })
                    <span class="necessary-field" style="font-size:small">* Required Field</span>
                    <div class="text-input-bg">
                        @Html.DropDownList("BTCH_ID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BTCH_ID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr class="label-underline label">

                <div class="label-field-pair label">
                    @Html.LabelFor(model => model.DOB, "Date Of Birth", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @id = "datepicker2", required = "required" } })
                        <span class="necessary-field" style="font-size:small">* Required Field</span>
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr class="label-underline label">

                <div class="label_field_pair">
                    <label class="label_for_student_gender" for="student_gender">Gender</label>
                    <div class="student_gender_value">
                        @Html.RadioButtonFor(model => model.GNDR, "M", false)@Html.Label("Male")
                        @Html.RadioButtonFor(model => model.GNDR, "F", false)@Html.Label("Female")
                    </div>
                </div>
                <hr class="label-underline label">

                <div class="label-field-pair label">
                    <label for="BLOOD_GRP">Blood Group</label>
                    <div class="text-input-bg">
                        @Html.DropDownList("BLOOD_GRP", new SelectList(Enum.GetValues(typeof(BloodGroup))), "Select Blood Group", new { @class = "form-control", @id = "BLOOD_GRP" })
                        <div class="extender"></div>
                    </div>
                </div>
                <hr class="label-underline label">

                <div class="label-field-pair label">
                    @Html.LabelFor(model => model.BIRTH_PLACE, "Birth Place", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="text-input-bg">
                        @Html.EditorFor(model => model.BIRTH_PLACE, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BIRTH_PLACE, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr class="label-underline label">

                <div class="label-field-pair label">
                    @Html.LabelFor(model => model.NTLTY_ID, "Nationality", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="text-input-bg">
                        @Html.DropDownList("NTLTY_ID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.NTLTY_ID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr class="label-underline label">

                <div class="label-field-pair label">
                    @Html.LabelFor(model => model.LANG, "Mother Tongue", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="text-input-bg">
                        @Html.EditorFor(model => model.LANG, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LANG, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr class="label-underline label">

                <div class="label-field-pair label">
                    @Html.LabelFor(model => model.STDNT_CAT_ID, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="text-input-bg">
                        @Html.DropDownList("STDNT_CAT_ID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.STDNT_CAT_ID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr class="label-underline label">

                <div class="label-field-pair label">
                    @Html.LabelFor(model => model.RLGN, "Religion", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="text-input-bg">
                        @Html.EditorFor(model => model.RLGN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RLGN, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div id="admission1_form_vertical_block_right">
                <span class="span-sub-heading">Contact Details</span>
                <hr class="sub-heading">
                <div class="label-field-pair label">
                    @Html.LabelFor(model => model.ADDR_LINE1, "Address Line 1", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="text-input-bg">
                        @Html.EditorFor(model => model.ADDR_LINE1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ADDR_LINE1, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr class="label-underline label">

                <div class="label-field-pair label">
                    @Html.LabelFor(model => model.ADDR_LINE2, "Address Line 2", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="text-input-bg">
                        @Html.EditorFor(model => model.ADDR_LINE2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ADDR_LINE2, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr class="label-underline label">

                <div class="label-field-pair label">
                    @Html.LabelFor(model => model.CITY, "City", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="text-input-bg">
                        @Html.EditorFor(model => model.CITY, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CITY, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr class="label-underline label">

                <div class="label-field-pair label">
                    @Html.LabelFor(model => model.STATE, "State", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="text-input-bg">
                        @Html.EditorFor(model => model.STATE, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.STATE, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr class="label-underline label">

                <div class="label-field-pair label">
                    @Html.LabelFor(model => model.PIN_CODE, "Zip", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="text-input-bg">
                        @Html.EditorFor(model => model.PIN_CODE, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PIN_CODE, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr class="label-underline label">

                <div class="label-field-pair label">
                    @Html.LabelFor(model => model.CTRY_ID, "Country", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="text-input-bg">
                        @Html.DropDownList("CTRY_ID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CTRY_ID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr class="label-underline label">

                <div class="label-field-pair label">
                    @Html.LabelFor(model => model.PH1, "Phone", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="text-input-bg">
                        @Html.EditorFor(model => model.PH1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PH1, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr class="label-underline label">

                <div class="label-field-pair label">
                    @Html.LabelFor(model => model.PH2, "Mobile", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="text-input-bg">
                        @Html.EditorFor(model => model.PH2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PH2, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr class="label-underline label">

                <div class="label-field-pair label">
                    @Html.LabelFor(model => model.EML, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="text-input-bg">
                        @Html.EditorFor(model => model.EML, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EML, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="label-field-pair label">
                    @Html.LabelFor(model => model.CLS_ROLL_NO, "Roll Number", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="text-input-bg">
                        @Html.EditorFor(model => model.CLS_ROLL_NO, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CLS_ROLL_NO, "", new { @class = "text-danger" })
                    </div>
                </div>
                @if (Html.Configuration_Value("ApplicationSmsEnabled").Equals("True"))
                {
                    <hr class="label-underline label">
                    <div class="label-field-pair label">
                        @Html.LabelFor(model => model.IS_SMS_ENABL, "Enable SMS Feature", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="text-input-bg">
                            @Html.RadioButtonFor(model => model.IS_SMS_ENABL, "True", true)@Html.Label("Yes")
                            @Html.RadioButtonFor(model => model.IS_SMS_ENABL, "False", false)@Html.Label("No")
                            @Html.ValidationMessageFor(model => model.IS_SMS_ENABL, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                <br />
                <script>
                    (function ($) { $.fn.filestyle = function (options) { var settings = { width: 250 }; if (options) { $.extend(settings, options); }; return this.each(function () { var self = this; var wrapper = $("<div>").css({ "width": settings.imagewidth + "px", "height": settings.imageheight + "px", "background": "url(" + settings.image + ") 0 0 no-repeat", "background-position": "right", "display": "inline", "position": "absolute", "overflow": "hidden" }); var filename = $('<input class="file">').addClass($(self).attr("class")).css({ "display": "inline", "width": settings.width + "px" }); $(self).before(filename); $(self).wrap(wrapper); $(self).css({ "position": "relative", "height": settings.imageheight + "px", "width": settings.width + "px", "display": "inline", "cursor": "pointer", "opacity": "0.0" }); if ($.browser.mozilla) { if (/Win/.test(navigator.platform)) { $(self).css("margin-left", "-142px"); } else { $(self).css("margin-left", "-168px"); }; } else { $(self).css("margin-left", settings.imagewidth - settings.width + "px"); }; $(self).bind("change", function () { filename.val($(self).val()); }); }); }; })(jQuery);
                </script>
                <span class="span-sub-heading">Upload Photo</span>
                <hr class="sub-heading">
                <div class="label-field-pair label">
                    @Html.LabelFor(model => model.PHTO_FILENAME, "Upload Photo (Maximum Size 2 MB)", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="text-input-bg">
                        <input id="PHTO_FILENAME" title="Upload Photo (Maximum Size 2 MB)" type="file" name="PHTO_FILENAME" />
                        @Html.ValidationMessageFor(model => model.PHTO_FILENAME, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="extender">
            </div>
        </div>
        <input type="submit" value="► Save And Proceed" class="submit_button" />
    }
</div>


@section scripts{

    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/dropzone.js"></script>

    <script type="text/javascript">

        $(document).ready(function () {
            $("#preview").fadeOut(15);
            $("#refreshButton").click(function () {
                var imageToLoad = $("#imageId").val();
                if (imageToLoad.length > 0) {
                    $("#preview").attr("src", "/Document/Show/" + imageToLoad);
                    $("#preview").fadeIn();
                }
            });
        });

    </script>
}