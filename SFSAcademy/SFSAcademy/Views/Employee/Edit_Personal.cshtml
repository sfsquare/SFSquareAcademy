@model SFSAcademy.EMPLOYEE
@using SFSAcademy.Models
@{
    ViewBag.Title = "Edit_Personal";
}
<script type="text/javascript" src="@Url.Content("~/Content/javascripts/jquery/jquery.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Content/javascripts/jquery/jquery-ui.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Content/javascripts/jquery/jquery-1.9.1.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Content/javascripts/jquery/jquery-ui.js")"></script>
<link rel="stylesheet" href="~/Content/stylesheets/_styles/jquery-ui.css" />
<script>
    $(function () {
        $("#datepicker").datepicker({
            showOn: "button",
            buttonImage: "/Content/images/calendar_date_select/calendar.gif",
            dateFormat: 'dd-mm-yy',
            buttonImageOnly: true
        });
    });

</script>
<div id="content-header">
    <img src="~/Content/images/HR/show_hr.png" alt="HR Logo">
    <h1>Edit Employee Information</h1>
    <h3>Personal</h3>
    <div id="app-back-button">
        <a href='javascript:history.back()' onclick="return confirm('are you sure?')"><img src="~/Content/images/buttons/back.png"></a>
    </div>
</div>
<div>
    <img src="~/Content/images/_global/header_underline_.jpg" style="width:100%">
</div>

<div id="page-yield">
    <div id="flash_box">
        @if (ViewBag.Notice != null)
        {
            <p class="flash-msg"> @ViewBag.Notice </p>
        }
    </div>
    @using (Html.BeginForm())
    {
        <div id="flash_box">
            @if (ViewBag.ErrorMessage != null)
            {
                <p class="flash-msg"> @ViewBag.ErrorMessage </p>
            }
        </div>
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.ID)
        <span class="span-sub-heading">Personal Details</span>
        <hr class="label-underline" />
        <div class="label-field-pair">
            @Html.LabelFor(model => model.DOB, "Date of Birth", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="text-input-bg">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "m-wrap  datepicker", @id = "datepicker" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="extender"></div>

        <hr class="label-underline" />

        <div class="label_field_pair">
            @Html.LabelFor(model => model.MARITAL_STAT, "Marital Status", htmlAttributes: new { @class = "label_for_employee_gender" })
            <div class="employee_gender_value">
                @Html.Label("Single", new { @class = "label_for_gender" })@Html.RadioButtonFor(model => model.MARITAL_STAT, "Single")
                @Html.Label("Married", new { @class = "label_for_gender" })@Html.RadioButtonFor(model => model.MARITAL_STAT, "Married")
                @Html.Label("Divorced", new { @class = "label_for_gender" })@Html.RadioButtonFor(model => model.MARITAL_STAT, "Divorced")
            </div>
        </div>
        <hr class="label-underline" />

        <div class="label-field-pair hide-on-single label">
            @Html.LabelFor(model => model.CHLD_CNT, "No Of Children", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="text-input-bg">
                @Html.EditorFor(model => model.CHLD_CNT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CHLD_CNT, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr class="label-underline" />

        <div class="label-field-pair">
            @Html.LabelFor(model => model.FTHR_NAME, "Father Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="text-input-bg">
                @Html.EditorFor(model => model.FTHR_NAME, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FTHR_NAME, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr class="label-underline" />

        <div class="label-field-pair">
            @Html.LabelFor(model => model.MTHR_NAME, "Mother Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="text-input-bg">
                @Html.EditorFor(model => model.MTHR_NAME, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MTHR_NAME, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr class="label-underline" />

        <div class="label-field-pair">
            @Html.LabelFor(model => model.HUSBND_NAME, "Spouse Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="text-input-bg">
                @Html.EditorFor(model => model.HUSBND_NAME, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HUSBND_NAME, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr class="label-underline" />

        <div class="label-field-pair">
            <label for="BLOOD_GRP">Blood Group</label>
            <div class="text-input-bg">
                @Html.DropDownList("BLOOD_GRP", new SelectList(Enum.GetValues(typeof(BloodGroup))), "Select Blood Group", new { @class = "form-control", @id = "BLOOD_GRP" })
                <div class="extender"></div>
            </div>
        </div>
        <hr class="label-underline" />

        <div class="label-field-pair">
            @Html.LabelFor(model => model.NTLTY_ID, "Nationality", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="text-input-bg">
                @Html.DropDownList("NTLTY_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NTLTY_ID, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr class="label-underline" />

        <script>
            (function ($) { $.fn.filestyle = function (options) { var settings = { width: 250 }; if (options) { $.extend(settings, options); }; return this.each(function () { var self = this; var wrapper = $("<div>").css({ "width": settings.imagewidth + "px", "height": settings.imageheight + "px", "background": "url(" + settings.image + ") 0 0 no-repeat", "background-position": "right", "display": "inline", "position": "absolute", "overflow": "hidden" }); var filename = $('<input class="file">').addClass($(self).attr("class")).css({ "display": "inline", "width": settings.width + "px" }); $(self).before(filename); $(self).wrap(wrapper); $(self).css({ "position": "relative", "height": settings.imageheight + "px", "width": settings.width + "px", "display": "inline", "cursor": "pointer", "opacity": "0.0" }); if ($.browser.mozilla) { if (/Win/.test(navigator.platform)) { $(self).css("margin-left", "-142px"); } else { $(self).css("margin-left", "-168px"); }; } else { $(self).css("margin-left", settings.imagewidth - settings.width + "px"); }; $(self).bind("change", function () { filename.val($(self).val()); }); }); }; })(jQuery);
        </script>
        <span class="span-sub-heading">Upload Photo</span>
        <hr class="sub-heading">
        <div class="label-field-pair label">
            @Html.LabelFor(model => model.PHTO_FILENAME, "Upload Photo (Maximum Size 2 MB)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="text-input-bg">
                <input id="PHTO_FILENAME" title="Upload Photo (Maximum Size 2 MB)" type="file" name="PHTO_FILENAME" />
                @Html.ValidationMessageFor(model => model.PHTO_FILENAME, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="save-proceed-button">
            <input type="submit" value="► Update" class="submit_button" />
        </div>
    }
</div>

