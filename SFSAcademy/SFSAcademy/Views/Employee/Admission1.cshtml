@model SFSAcademy.EMPLOYEE

@{
    ViewBag.Title = "Admission1";
}
<script>
    $(function () {
        $(".datepicker").datepicker({
            showOn: "button",
            buttonImage: "/Content/images/calendar_date_select/calendar.gif",
            dateFormat: 'dd/mm/yy',
            buttonImageOnly: true,
        });
    });

</script>


<div id="content-header">
    <img src="~/Content/images/HR/show_hr.png" alt="HR Logo">
    <h1>Employee Admission</h1>
    <h3>Step 1</h3>
    <div id="app-back-button">
        <a href='javascript:history.back()' onclick="return confirm('are you sure?')"><img src="~/Content/images/buttons/back.png"></a>
    </div>
</div>
<div>
    <img src="~/Content/images/_global/header_underline_.jpg" style="width:100%">
</div>

<div id="page-yield">
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    <div id="flash_box">
        @if (ViewBag.Notice != null)
        {
            <p class="flash-msg"> @ViewBag.Notice </p>
        }
    </div>
    @if (!Html.Configuration_Value("EmployeeNumberAutoIncrement").Equals('0'))
    {
        <p class="flash-msg"> Last Employee Number = @Html.Configuration_Value("EmployeeNumberAutoIncrement") </p>
    }
    @using (Html.BeginForm("Admission1", "Employee", FormMethod.Post, new { @encType = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div id="flash_box">
            @if (ViewBag.ErrorMessage != null)
            {
                <p class="flash-msg"> @ViewBag.ErrorMessage </p>
            }
        </div>
        <div id="admission1_form">
            <div id="necessary-field-notification">
                Mark
                <span class="necessary-field">*</span> Denotes Necessary Field
            </div>
            <span class="span-sub-heading">Personal Details</span>
            <hr class="sub-heading">

            <div class="label-field-pair label">
                @Html.LabelFor(model => model.EMP_NUM, "Employee Number", htmlAttributes: new { @class = "control-label col-md-2" })
                <span class="necessary-field">*</span>
                <div class="text-input-bg">
                    @Html.EditorFor(model => model.EMP_NUM, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.NewEmployeeNumber, @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.EMP_NUM, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>

            <hr class="label-underline label" />
            <div class="label-field-pair label">
                @Html.LabelFor(model => model.JOINING_DATE, "Joining Date", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="text-input-bg">
                    @Html.EditorFor(model => model.JOINING_DATE, new { htmlAttributes = new { @class = "m-wrap  datepicker" } })
                    @Html.ValidationMessageFor(model => model.JOINING_DATE, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>

            <hr class="label-underline label" />
            <div class="label-field-pair label">
                @Html.LabelFor(model => model.FIRST_NAME, "First Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <span class="necessary-field" style="font-size:small">* Required Field</span>
                <div class="text-input-bg">
                    @Html.EditorFor(model => model.FIRST_NAME, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.FIRST_NAME, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>

            <hr class="label-underline label" />
            <div class="label-field-pair label">
                @Html.LabelFor(model => model.MID_NAME, "Middle Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="text-input-bg">
                    @Html.EditorFor(model => model.MID_NAME, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MID_NAME, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>
            <hr class="label-underline label" />
            <div class="label-field-pair label">
                @Html.LabelFor(model => model.LAST_NAME, "Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="text-input-bg">
                    @Html.EditorFor(model => model.LAST_NAME, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LAST_NAME, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>

            <hr class="label-underline label" />
            <div class="label-field-pair label">
                @Html.LabelFor(model => model.EML, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="text-input-bg">
                    @Html.EditorFor(model => model.EML, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EML, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>
            <hr class="label-underline label" />
            <div class="label_field_pair">
                @Html.LabelFor(model => model.GNDR, "Gender", htmlAttributes: new { @class = "label_for_employee_gender" })
                <div class="employee_gender_value">
                    <label class="label_for_gender" for="master_student_gender_true">Male</label>@Html.RadioButtonFor(model => model.GNDR, "M", true)
                    <label class="label_for_gender" for="master_student_gender_false">Female</label>@Html.RadioButtonFor(model => model.GNDR, "F", false)
                </div>
            </div>
            <hr class="label-underline label" />
            <div class="label-field-pair label">
                @Html.LabelFor(model => model.DOB, "Date Of Birth", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "m-wrap  datepicker", required = "required" } })
                    <span class="necessary-field" style="font-size:small">* Required Field</span>
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>
            <hr class="label-underline label" />
            <div class="label-field-pair label">
                @Html.LabelFor(model => model.EMP_DEPT_ID, "Department", htmlAttributes: new { @class = "control-label col-md-2" })
                <span class="necessary-field" style="font-size:small">* Required Field</span>
                <div class="text-input-bg">
                    @Html.DropDownList("EMP_DEPT_ID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EMP_DEPT_ID, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>

            <hr class="label-underline label" />
            <div class="label-field-pair label">
                @Html.LabelFor(model => model.EMP_CAT_ID, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                <span class="necessary-field" style="font-size:small">* Required Field</span>
                <div class="text-input-bg">
                    @Html.DropDownList("EMP_CAT_ID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EMP_CAT_ID, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>

            <hr class="label-underline label" />
            <div class="label-field-pair label">
                @Html.LabelFor(model => model.EMP_POS_ID, "Position", htmlAttributes: new { @class = "control-label col-md-2" })
                <span class="necessary-field" style="font-size:small">* Required Field</span>
                <div class="text-input-bg">
                    @Html.DropDownList("EMP_POS_ID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EMP_POS_ID, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>
            <hr class="label-underline label" />
            <div class="label-field-pair label">
                @Html.LabelFor(model => model.EMP_GRADE_ID, "Grade", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="text-input-bg">
                    @Html.DropDownList("EMP_GRADE_ID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EMP_GRADE_ID, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>

            <hr class="label-underline label" />
            <div class="label-field-pair label">
                @Html.LabelFor(model => model.JOB_TIL, "Job Title", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="text-input-bg">
                    @Html.EditorFor(model => model.JOB_TIL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JOB_TIL, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>

            <hr class="label-underline label" />
            <div class="label-field-pair label">
                @Html.LabelFor(model => model.QUAL, "Qualification", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="text-input-bg">
                    @Html.EditorFor(model => model.QUAL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.QUAL, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>

            <hr class="label-underline label" />
            <div class="label-field-pair label">
                @Html.LabelFor(model => model.EXPNC_DETL, "Experience Deteail", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="text-input-bg">
                    @Html.EditorFor(model => model.EXPNC_DETL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EXPNC_DETL, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>

            <hr class="label-underline label" />
            <div class="label-field-pair label">
                @Html.LabelFor(model => model.EXPNC_DETL, "Total Experince", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="text-input-bg">
                    @Html.EditorFor(model => model.EXPNC_YEAR, new { htmlAttributes = new { @class = "form-control", @title = "Year" } })
                    @Html.EditorFor(model => model.EXPNC_MONTH, new { htmlAttributes = new { @class = "form-control", @title = "Month" } })
                    @Html.ValidationMessageFor(model => model.EXPNC_YEAR, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.EXPNC_MONTH, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>
            <hr class="label-underline label" />
            <br />
            <span class="span-sub-heading">Personal Details</span>
            <hr class="sub-heading" />
            <div class="label_field_pair">
                @Html.LabelFor(model => model.MARITAL_STAT, "Marital Status", htmlAttributes: new { @class = "label_for_employee_gender" })
                <div class="text-input-bg">
                    @Html.DropDownList("MARITAL_STAT", EnumHelper.GetSelectList(typeof(Marital_Status)), "Select Marital Status", new { @class = "form-control", @onchange = "hide_or_show_fields(this.value)" })
                </div>
            </div>

            <hr class="label-underline label" />
            <div class="label-field-pair hide-on-single label">
                @Html.LabelFor(model => model.CHLD_CNT, "No Of Children", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="text-input-bg">
                    @Html.EditorFor(model => model.CHLD_CNT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CHLD_CNT, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>
            <br />
            <hr class="label-underline label" />
            <div class="label-field-pair  hide-on-single label">
                @Html.LabelFor(model => model.FTHR_NAME, "Father Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="text-input-bg">
                    @Html.EditorFor(model => model.FTHR_NAME, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FTHR_NAME, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>
            <hr class="label-underline label" />
            <div class="label-field-pair label">
                @Html.LabelFor(model => model.MTHR_NAME, "Mother Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="text-input-bg">
                    @Html.EditorFor(model => model.MTHR_NAME, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MTHR_NAME, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>
            <hr class="label-underline label" />
            <div class="label-field-pair hide-on-single label">
                @Html.LabelFor(model => model.HUSBND_NAME, "Spouse Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="text-input-bg">
                    @Html.EditorFor(model => model.HUSBND_NAME, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HUSBND_NAME, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>
            <hr class="label-underline hide-on-single label" />
            <div class="label-field-pair">
                <label for="BLOOD_GRP">Blood Group</label>
                <div class="text-input-bg">
                    @Html.DropDownList("BLOOD_GRP", new SelectList(Enum.GetValues(typeof(BloodGroup))), "Select Blood Group", new { @class = "form-control", @id = "BLOOD_GRP" })
                    <div class="extender"></div>
                </div>
            </div>
            <hr class="label-underline label" />
            <div class="label-field-pair label">
                @Html.LabelFor(model => model.NTLTY_ID, "Nationality", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="text-input-bg">
                    @Html.DropDownList("NTLTY_ID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NTLTY_ID, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>
            </div>
            <hr class="label-underline label" />
            <script>
                (function ($) { $.fn.filestyle = function (options) { var settings = { width: 250 }; if (options) { $.extend(settings, options); }; return this.each(function () { var self = this; var wrapper = $("<div>").css({ "width": settings.imagewidth + "px", "height": settings.imageheight + "px", "background": "url(" + settings.image + ") 0 0 no-repeat", "background-position": "right", "display": "inline", "position": "absolute", "overflow": "hidden" }); var filename = $('<input class="file">').addClass($(self).attr("class")).css({ "display": "inline", "width": settings.width + "px" }); $(self).before(filename); $(self).wrap(wrapper); $(self).css({ "position": "relative", "height": settings.imageheight + "px", "width": settings.width + "px", "display": "inline", "cursor": "pointer", "opacity": "0.0" }); if ($.browser.mozilla) { if (/Win/.test(navigator.platform)) { $(self).css("margin-left", "-142px"); } else { $(self).css("margin-left", "-168px"); }; } else { $(self).css("margin-left", settings.imagewidth - settings.width + "px"); }; $(self).bind("change", function () { filename.val($(self).val()); }); }); }; })(jQuery);
            </script>
            <span class="span-sub-heading">Upload Photo</span>
            <hr class="sub-heading">
            <div class="label-field-pair label">
                @Html.LabelFor(model => model.PHTO_FILENAME, "Upload Photo (Maximum Size 2 MB)", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="text-input-bg">
                    <input id="PHTO_FILENAME" title="Upload Photo (Maximum Size 2 MB)" type="file" name="PHTO_FILENAME" />
                    @Html.ValidationMessageFor(model => model.PHTO_FILENAME, "", new { @class = "text-danger", @style = "color:red; font-size:small" })
                </div>

            </div>
        </div>
        <input type="submit" value="► Save And Proceed" class="submit_button" />
    }
</div>


@section scripts{

    @Scripts.Render("~/bundles/jqueryunobtrusive") @*For unobtrusive-ajax*@
    @Scripts.Render("~/bundles/jqueryval") @*For validate and validate-unobtrusive*@

    <script type="text/javascript">
        $(document).ready(function () {
            $("#preview").fadeOut(15);
            $("#refreshButton").click(function () {
                var imageToLoad = $("#imageId").val();
                if (imageToLoad.length > 0) {
                    $("#preview").attr("src", "/Document/Show/" + imageToLoad);
                    $("#preview").fadeIn();
                }
            });
        });

        document.observe("dom:loaded", function () {
            hide_or_show_fields('single');
        });
        function hide_or_show_fields(value) {
            if (value == 'single') {
                $('.hide-on-single').each(function () {
                    this.hide();
                });
            }
            else {
                $('.hide-on-single').each(function () {
                    this.show();
                });
            }
        }
    </script>

}


